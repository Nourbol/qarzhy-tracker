plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id "org.sonarqube" version "5.1.0.4882"
    id "org.owasp.dependencycheck" version "12.1.0"
}

group = 'kz.edu.astanait'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

configurations.configureEach {
    resolutionStrategy {
        dependencySubstitution {
            substitute(module('org.bouncycastle:bcmail-jdk15on:1.69')).using(module('org.bouncycastle:bcmail-jdk18on:1.80'))
            substitute(module('org.bouncycastle:bcprov-jdk15on:1.69')).using(module('org.bouncycastle:bcprov-jdk18on:1.80'))
            substitute(module('commons-io:commons-io:2.11.0')).using(module('commons-io:commons-io:2.18.0'))
        }
    }
}

repositories {
    mavenCentral()
}

ext {
    springdocVersion = "2.2.0"
    springCloudVersion = "2024.0.0"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springdocVersion}"
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.flywaydb:flyway-core'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
    annotationProcessor "org.hibernate.orm:hibernate-jpamodelgen"
    implementation('technology.tabula:tabula:1.0.5') {
        exclude group: 'org.slf4j', module: 'slf4j-api'
        exclude group: 'org.slf4j', module: 'slf4j-simple'
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

dependencyCheck {
    nvd.apiKey = System.getenv('NVD-API-KEY')
}

sonar {
    properties {
        property 'sonar.dependencyCheck.jsonReportPath', 'build/reports/dependency-check-report.json'
        property 'sonar.dependencyCheck.htmlReportPath', 'build/reports/dependency-check-report.html'
    }
}
